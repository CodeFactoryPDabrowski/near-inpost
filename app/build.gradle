apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'realm-android'

/**
 * Function to retrieve a secret from environment variable or gradle property
 * @param envVarName name of the environment variable to be used in the first place
 * @param propertyName name of the gradle.properties entry
 * @return value of the env. var, property or "undefined"
 */
def secret(String envVarName, String propertyName) {
    try {
        return '"' + (System.getenv(envVarName) ?: property(propertyName)) + '"'
    } catch (MissingPropertyException ignored) {
        return "\"$propertyName undefined\""
    }
}


def googleGeocodingApiKeyProp = secret("GOOGLE_GEOCODING_API_KEY", "GoogleGeocodingApiKey")

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.codefactory.przemyslawdabrowski.nearinpost"
        minSdkVersion 17
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each { buildType ->
        buildType.buildConfigField 'String', 'GOOGLE_GEOCODING_API_KEY', googleGeocodingApiKeyProp
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    kapt {
        generateStubs = true
    }
}

dependencies {
    def appDependencies = rootProject.ext.dependencies

    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile appDependencies.jUnitTest
    compile appDependencies.appCompat
    compile appDependencies.kotlin
    compile appDependencies.kotterKnife
    kapt appDependencies.daggerCompiler //needed for source code generation using Kotlin processor
    compile appDependencies.dagger
    provided appDependencies.javaxAnnotation //needed to resolve compilation errors
    compile appDependencies.kotlinGenerator
    compile appDependencies.retrofit2
    compile(appDependencies.simpleXMLConverter) {
        exclude module: 'stax-api'
        exclude module: 'stax'
        exclude module: 'xpp3'
    }
    compile appDependencies.slimber
    compile appDependencies.retrofitRxAdapter
    compile appDependencies.rxAndroid
    compile appDependencies.rxKotlin
    compile appDependencies.stetho
    compile appDependencies.stethoOkHttp
    compile appDependencies.design
    compile appDependencies.cardView
    compile appDependencies.recyclerView
    compile appDependencies.reactiveLocation
    compile appDependencies.serviceLocation
    compile appDependencies.maps
    compile appDependencies.gson
    compile appDependencies.rxBinding
}
buildscript {
    def kotlinVersion = rootProject.ext.kotlinVersion

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}
repositories {
    mavenCentral()
}
